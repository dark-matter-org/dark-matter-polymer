ComplexTypeDefinition
name 			YangModelInfo
requiredPart	String		url	 	"The URL where the model can be found."
requiredPart	String   	name	"The model name."
requiredPart	String   	version	"The model version."
//optionalPart	Initializer   	init		"One or more initializers to be executed once the instance is running" multivalued=true
//optionalPart	String   		note		"A note regarding this instance."
description		The YangModelInfo type allows for specification of where to find a Yang model, its name
 and the version.
 The micro grammar is:
 <pre>
 url name version
 </pre>
 Where:
 <ul>
 <li> url     - The URL where the model can be found. </li>
 <li> name    - The model name. </li>
 <li> version - The model version. </li>
 </ul>
// Optional parts:
// <ul>
// <li>init - One or more initializers to be executed once the instance is running. </li>
// <li>note - A note regarding this instance. </li>
// </ul>
// <p/>

ComplexTypeDefinition
name 			EnumValueInfo
requiredPart	String		fromValue	"The value from which we're mapping."
requiredPart	String   	toValue		"The value to which we're mapping."
description		The EnumValueInfo type allows for specification of how you map from one
 model's enumeration to another model's enumeration.
 The micro grammar is:
 <pre>
 fromValue toValue
 </pre>
 Where:
 <ul>
 <li> fromValue - The URL where the model can be found. </li>
 <li> toValue   - The model name. </li>
 </ul>

ComplexTypeDefinition
name 			DeviceSupportInfo
requiredPart	String		vendor		"The device vendor"
requiredPart	String   	deviceType	"The device type."
requiredPart	String   	osVersion	"The OS version."
description		The DeviceSupportInfo type allows for specification of information used to
 structure the plastic directory structure and file naming conventions.
 The micro grammar is:
 <pre>
 vendor deviceType osVersion
 </pre>
 Where:
 <ul>
 <li> vendor     - The device vendor. </li>
 <li> deviceType - The device type. </li>
 <li> osVersion  - The OS version. </li>
 </ul>
